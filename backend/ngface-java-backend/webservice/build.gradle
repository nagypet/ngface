/*
 * Copyright 2020-2022 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    alias libs.plugins.org.springframework.boot
    alias libs.plugins.io.spring.dependency.management
    id 'application'
}

ext {
    imagePrefix = 'ngface'
    dockerRegistry = 'docker-registry:5000'
}

apply from: '../gradle/common.gradle'
apply from: '../gradle/docker.gradle'


repositories {
    mavenCentral()
    mavenLocal()
}


application {
    mainClassName = 'hu.perit.ngface.webservice.NgfaceApplication'
    // Some JVM options already set in common.gradle
    applicationDefaultJvmArgs += ['-Xmx512m', '-Xms32m']
}


dependencies {
    // -----------------------------------------------------------------------------------------------------------------
    // Compile dependencies
    // -----------------------------------------------------------------------------------------------------------------
    implementation project(':ngface-core')
    implementation project(':ngface-rest')
    implementation project(':ngface-data-jpa')
    implementation project(':ngface-sse')

//    implementation project(':spvitamin-core')
//    implementation project(':spvitamin-spring-general')
//    implementation project(':spvitamin-spring-server')
//    implementation project(':spvitamin-spring-logging')
//    implementation project(':spvitamin-spring-admin')
//    implementation project(':spvitamin-spring-security')
//    implementation project(':spvitamin-spring-data')

    implementation platform(libs.spvitamin)
    implementation 'hu.perit.spvitamin:spvitamin-core'
    implementation 'hu.perit.spvitamin:spvitamin-spring-general'
    implementation 'hu.perit.spvitamin:spvitamin-spring-server'
    implementation 'hu.perit.spvitamin:spvitamin-spring-logging'
    implementation 'hu.perit.spvitamin:spvitamin-spring-admin'
    implementation 'hu.perit.spvitamin:spvitamin-spring-security'
    implementation 'hu.perit.spvitamin:spvitamin-spring-data'

    // Lombok
    compileOnly libs.lombok
    testCompileOnly libs.lombok
    annotationProcessor libs.lombok
    testAnnotationProcessor libs.lombok

    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Caffein cache
    implementation 'com.github.ben-manes.caffeine:caffeine'

    // Micrometer
    implementation 'io.micrometer:micrometer-tracing'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'

    // Springdoc
    implementation libs.openapi.ui
    implementation libs.openapi.api

    // apache.commons
    implementation libs.commons.lang3

    // Validation
    implementation 'jakarta.validation:jakarta.validation-api'
    implementation libs.hibernate.validator

    // Guava
    implementation libs.guava

    // Mapstruct
    implementation libs.mapstruct
    annotationProcessor libs.mapstruct.processor

    // OpenCSV
    implementation libs.opencsv

    // Slf4J
    implementation libs.slf4j.api


    // -----------------------------------------------------------------------------------------------------------------
    // Test dependencies
    // -----------------------------------------------------------------------------------------------------------------
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


    //------------------------------------------------------------------------------------------------------------------
    // Runtime dependencies
    //------------------------------------------------------------------------------------------------------------------
    // PostgreSQL
    runtimeOnly 'org.postgresql:postgresql'
}


test {
    useJUnitPlatform()
}


dockerImage() {
    dependsOn 'dockerBackendImage'
}