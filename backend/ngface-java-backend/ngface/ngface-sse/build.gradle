/*
 * Copyright 2020-2022 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
    id 'cz.habarta.typescript-generator' version '3.2.1263'
}
apply from: '../gradle/common.gradle'


repositories {
    mavenCentral()
    mavenLocal()
}


dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'

    // -----------------------------------------------------------------------------------------------------------------
    // Compile dependencies
    // -----------------------------------------------------------------------------------------------------------------
    implementation project(':ngface-core')

//    implementation project(':spvitamin-core')
//    implementation project(':spvitamin-spring-general')
    implementation 'hu.perit.spvitamin:spvitamin-core'
    implementation 'hu.perit.spvitamin:spvitamin-spring-general'
    implementation 'hu.perit.spvitamin:spvitamin-spring-logging'

    // Lombok
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Validation
    implementation 'jakarta.validation:jakarta.validation-api'

    // apache.commons
    implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"
    implementation "org.apache.commons:commons-collections4:${commonsCollections4Version}"

    // Google findbugs
    implementation "com.google.code.findbugs:${findbugsVersion}"

    // Slf4J
    implementation 'org.slf4j:slf4j-api:2.0.7'

    // -----------------------------------------------------------------------------------------------------------------
    // Test dependencies
    // -----------------------------------------------------------------------------------------------------------------
    // Lombok
    testCompileOnly "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"

    testImplementation 'ch.qos.logback:logback-classic:1.4.7'
    testImplementation 'ch.qos.logback:logback-core:1.4.7'
}


dependencyManagement {
    imports {
        mavenBom "hu.perit.spvitamin:spvitamin-dependencies:${spvitaminVersion}"
    }
}


test {
    useJUnitPlatform()
}


generateTypeScript {
    jsonLibrary = 'jackson2'
    classPatterns = [
            'hu.perit.ngface.sse.notification.**'
    ]
    customTypeNaming = [
            'hu.perit.ngface.sse.notification.SseNotification$Type:SseNotification.Type',
            'hu.perit.ngface.sse.notification.SseMessageNotification$Level:SseMessageNotification.Level',
    ]
    outputFile = 'build/ngface-sse-models.ts'
    outputFileType = 'implementationFile'
    outputKind = 'module'
    namespace = 'NgfaceSse'
    //disableTaggedUnions = true
    optionalProperties = 'useSpecifiedAnnotations'
    optionalAnnotations = [
            'javax.annotation.Nullable'
    ]
    optionalPropertiesDeclaration = 'nullableType'
}

dist.configure {
    finalizedBy generateTypeScript
}
